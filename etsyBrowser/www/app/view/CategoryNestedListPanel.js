/*
 * File: app/view/AppPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Etsy.view.CategoryNestedListPanel', {
    extend: 'Ext.Panel',

    config: {
        fullscreen: true,
        zIndex: 100000,
        id: 'categoryNestedListPanel',
        modal: true,
		hideOnMaskTap: true,
		width: 500,
		height: 600,
		layout: 'fit',
		top: 0,
		left: 0,
		margin: '50px 0 0 0',
		hidden: true,
		items: [
            {
                id: 'categoryNestedListPopup',
    			xtype: 'nestedlist',
    			title: 'Categories',
                displayField: 'short_name',
    			store: 'Categories',
    			updateTitleText: false,
    			listeners: {
    				itemtap: function(nestedlist, list, index, target, record, e) {
                        // setTimeout(function(){
                        //     Ext.getCmp($('#categoryNestedListPopup .x-button-back').attr('id')).setTop(8)
                        //                             $('#categoryNestedListPopup .x-button-back').css('width', '288px !important');
                        // })

    				   
    					// this is a child child node
    					if (record.childNodes.length == 0) {
    						var tags = record.get('name') + ',' + record.parentNode.get('name');
    						var category = record.parentNode.parentNode.get('name');
    						console.log('LEVEL 3');
    						console.log('tags are', tags);
    						console.log('category is', category);
    						
                            self.loadListings('tags', record.parentNode.parentNode, record.get('short_name'), tags);

                        // this is the main cateogry
    					} else if (!record.parentNode.parentNode) {
    					    if(Ext.getCmp('goToButton')){
    					        Ext.getCmp('goToButton').setText('Go to ' + record.get('short_name'));
    					        GLOBAL.goToButton = ['category', record, null, null];
    					    }else{
    					        setTimeout(function(){
                                    var toolbar = nestedlist.getToolbar();

                                    toolbar.setTitle('');

                                    // toolbar.setPadding('50px 0.2em 0px');
                                    // toolbar.setHeight(100);
        					        toolbar.add({
        					            id: 'goToButton',
                                        // width: 300,
        					            xtype: 'button', 
                                        // left: 0,
                                        // top: -50,
                                        // right: 0,
        					            text: 'Go to ' + record.get('short_name'),
        					            listeners: {
        					                tap: function(){
            					                    console.log('tapping the go to button');
                                                    self.loadListings(GLOBAL.goToButton[0], GLOBAL.goToButton[1], GLOBAL.goToButton[2], GLOBAL.goToButton[4]);
            					            }
        					            }
    					            });
    					            GLOBAL.goToButton = ['category', record, null, null];
        					    }, 0);
    					    }
    					} else {
    						var tags = record.get('name');
    						var category = record.parentNode.get('name');
    					    Ext.getCmp('goToButton').setText('Go to ' + record.get('short_name'));
                            GLOBAL.goToButton = ['tags', record.parentNode, record.get('short_name'), tags];

    						console.log('LEVEL 2');
    						console.log('tags are', tags);
    						console.log('category is', category);
    					}

    				}
    			}
        }]
    },
    


});